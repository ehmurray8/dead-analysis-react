{"version":3,"sources":["../server.js"],"names":["app","pool","DbConfig","use","express","json","credentials","origin","post","req","res","artistId","params","status","send","get","allSongs","allOriginals","allCovers","promises","catch","error","console","log","then","songs","push","originals","covers","Promise","all","artistName","artists","sortArtists","firstArtist","secondArtist","first","name","second","hasData","localeCompare","sort","exitHandler","end","listen"],"mappings":"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","sourcesContent":["import express from 'express';\nimport loadSetlists from \"./src/load_setlists\";\nimport {DbConfig} from \"./src/keys\";\nimport {Pool} from 'pg';\nimport searchArtist from \"./src/search_artist\";\nimport {getAllCovers, getAllOriginals, getAllSongs} from './src/database_queries';\nimport \"@babel/polyfill\";\nimport cors from 'cors';\n\nconst app = express();\n\nconst pool = Pool(DbConfig); app.use(express.json());\n\napp.use(cors({\n    credentials: true,\n    origin: true,\n}));\n\n// Download data\napp.post('/artist/:artistId', (req, res) => {\n    const artistId = req.params.artistId;\n    loadSetlists(artistId, pool);\n    return res.status(200).send(\"Downloading \" + artistId + \" data...\");\n});\n\napp.get('/artist/:artistId/', async (req, res) => {\n    const artistId = req.params.artistId;\n    let allSongs = [];\n    let allOriginals = [];\n    let allCovers = [];\n    const promises = [\n        getAllSongs(pool, artistId)\n            .catch((error) => console.log(error))\n            .then((songs) => {\n                allSongs.push(...songs);\n            }),\n        getAllOriginals(pool, artistId)\n            .catch((error) => console.log(error))\n            .then((originals) => {\n                allOriginals.push(...originals);\n            }),\n        getAllCovers(pool, artistId)\n            .catch((error) => console.log(error))\n            .then((covers) => {\n                allCovers.push(...covers);\n            })\n    ];\n    await Promise.all(promises);\n    return res.status(200).send({\n        songs: allSongs,\n        covers: allCovers,\n        originals: allOriginals,\n    });\n});\n\n// Search for an artist\napp.get('/search/artists/:artistName', async (req, res) => {\n    const artistName = req.params.artistName;\n    const artists = await searchArtist(artistName, pool).catch((error) => console.log(error));\n    const sortArtists = (firstArtist, secondArtist) => {\n        const first = firstArtist.name;\n        const second = secondArtist.name;\n        if (first === artistName) {\n            return -1;\n        } else if (second === artistName) {\n            return 1;\n        } else if (first.hasData && second.hasData) {\n            return first.localeCompare(second);\n        } else if (first.hasData) {\n            return -1;\n        } else if (second.hasData) {\n            return 1;\n        } else {\n            return first.localeCompare(first);\n        }\n    };\n    artists.sort(sortArtists);\n    return res.status(200).send(artists);\n});\n\napp.get('/artist/:artistId/venue-locations', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/typical-concert', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/locations', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/songs', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/covers', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/tours', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/venues', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/songs_by', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\nconst exitHandler = () => {\n    pool.end();\n    console.log(\"Exiting\")\n};\n\n// process.on('exit', exitHandler);\n// process.on('SIGINT', exitHandler);\n// process.on('SIGUSR1', exitHandler);\n// process.on('SIGUSR2', exitHandler);\n// process.on('uncaughtException', exitHandler);\n\napp.listen(3001);\nconsole.log('app running on port.', 3001);\n"],"file":"server.js"}