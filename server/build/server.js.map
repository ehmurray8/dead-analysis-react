{"version":3,"sources":["../server.js"],"names":["app","pool","DbConfig","use","express","json","credentials","origin","post","req","res","artistId","params","status","send","get","artistName","catch","error","console","log","artists","exitHandler","end","listen"],"mappings":"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","sourcesContent":["import express from 'express';\nimport loadSetlists from \"./src/load_setlists\";\nimport {DbConfig} from \"./src/keys\";\nimport {Pool} from 'pg';\nimport searchArtist from \"./src/search_artist\";\nimport \"@babel/polyfill\";\nimport cors from 'cors';\n\nconst app = express();\n\nconst pool = Pool(DbConfig); app.use(express.json());\n\napp.use(cors({\n    credentials: true,\n    origin: true,\n}));\n\n// Download data\napp.post('/artist/:artistId', (req, res) => {\n    const artistId = req.params.artistId;\n    loadSetlists(artistId, pool);\n    return res.status(200).send(\"Downloading \" + artistId + \" data...\");\n});\n\napp.get('/artist/:artistId/', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\n// Search for an artist\napp.get('/search/artists/:artistName', async (req, res) => {\n    const artistName = req.params.artistName;\n    const artists = await searchArtist(artistName, pool).catch((error) => console.log(error));\n    return res.status(200).send(artists);\n});\n\napp.get('/artist/:artistId/venue-locations', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/typical-concert', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/locations', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/songs', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/covers', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/tours', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/venues', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\napp.get('/artist/:artistId/songs_by', (req, res) => {\n    const artistId = req.params.artistId;\n    return res.status(200).send(\"Ok\");\n});\n\nconst exitHandler = () => {\n    pool.end();\n    console.log(\"Exiting\")\n};\n\n// process.on('exit', exitHandler);\n// process.on('SIGINT', exitHandler);\n// process.on('SIGUSR1', exitHandler);\n// process.on('SIGUSR2', exitHandler);\n// process.on('uncaughtException', exitHandler);\n\napp.listen(3001);\nconsole.log('app running on port.', 3001);\n"],"file":"server.js"}